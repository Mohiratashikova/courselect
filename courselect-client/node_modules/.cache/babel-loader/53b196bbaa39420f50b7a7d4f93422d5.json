{"ast":null,"code":"import { SET_PROFESSIONS, SET_PROFESSION, ADD_PROFESSION, SET_COURSES, SET_COMMENTS, LOADING_DATA, LIKE_COURSE, UNLIKE_COURSE, DELETE_COMMENT, SET_ERRORS, POST_COMMENT, CLEAR_ERRORS, LOADING_UI, SET_COURSE, STOP_LOADING_UI, SUBMIT_COMMENT } from \"../types\";\nimport axios from \"axios\"; // Get all screams\n\nexport const getProfessions = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(\"/professions\").then(res => {\n    dispatch({\n      type: SET_PROFESSIONS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_PROFESSIONS,\n      payload: []\n    });\n  });\n};\nexport const setProfession = professionName => {\n  return {\n    type: SET_PROFESSION,\n    payload: professionName\n  };\n};\nexport const searchCourses = professionName => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(\"/courses\", {\n    params: {\n      professionName\n    }\n  }).then(res => {\n    dispatch({\n      type: SET_COURSES,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_COURSES,\n      payload: []\n    });\n  });\n};\nexport const addProfession = professionName => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.post(\"/profession\", {\n    name: professionName\n  }).then(res => {\n    dispatch(getProfessions());\n  }).catch(err => {\n    dispatch({\n      type: SET_COURSES,\n      payload: []\n    });\n  });\n};\nexport const likeCourse = courseId => dispatch => {\n  axios.get(`/course/${courseId}/like`).then(res => {\n    dispatch({\n      type: LIKE_COURSE,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Unlike a scream\n\nexport const unlikeCourse = courseId => dispatch => {\n  axios.get(`/course/${courseId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_COURSE,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addCourse = (courseName, professionName) => dispatch => {\n  axios.post(`/profession/course`, {\n    name: courseName,\n    professionName\n  }).then(res => {\n    dispatch(searchCourses(professionName));\n  }).catch(err => console.log(err));\n};\nexport const searchComments = courseName => dispatch => {\n  dispatch({\n    type: SET_COURSE,\n    payload: courseName\n  });\n  axios.get(\"/courseToProfession\", {\n    params: {\n      courseName\n    }\n  }).then(res => {\n    dispatch({\n      type: SET_COMMENTS,\n      payload: res.data.allComments\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_COMMENTS,\n      payload: []\n    });\n  });\n};\nexport const addComment = (body, courseName) => dispatch => {\n  axios.post(\"/course/comment\", {\n    courseName,\n    body\n  }).then(() => {\n    dispatch(searchComments(courseName));\n  }).catch(err => console.log(err));\n};\nexport const deleteComment = (commentId, courseName) => dispatch => {\n  axios.delete(`/comment/${commentId}`).then(() => {\n    dispatch(searchComments(courseName));\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/mokhiraatashikova/Desktop/mohi/exponential program/coursesApp/courselect-client/src/redux/actions/dataActions.js"],"names":["SET_PROFESSIONS","SET_PROFESSION","ADD_PROFESSION","SET_COURSES","SET_COMMENTS","LOADING_DATA","LIKE_COURSE","UNLIKE_COURSE","DELETE_COMMENT","SET_ERRORS","POST_COMMENT","CLEAR_ERRORS","LOADING_UI","SET_COURSE","STOP_LOADING_UI","SUBMIT_COMMENT","axios","getProfessions","dispatch","type","get","then","res","payload","data","catch","err","setProfession","professionName","searchCourses","params","addProfession","post","name","likeCourse","courseId","console","log","unlikeCourse","addCourse","courseName","searchComments","allComments","addComment","body","deleteComment","commentId","delete"],"mappings":"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","sourcesContent":["import {\n  SET_PROFESSIONS,\n  SET_PROFESSION,\n  ADD_PROFESSION,\n  SET_COURSES,\n  SET_COMMENTS,\n  LOADING_DATA,\n  LIKE_COURSE,\n  UNLIKE_COURSE,\n  DELETE_COMMENT,\n  SET_ERRORS,\n  POST_COMMENT,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_COURSE,\n  STOP_LOADING_UI,\n  SUBMIT_COMMENT,\n} from \"../types\";\nimport axios from \"axios\";\n\n// Get all screams\nexport const getProfessions = () => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/professions\")\n    .then((res) => {\n      dispatch({\n        type: SET_PROFESSIONS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_PROFESSIONS,\n        payload: [],\n      });\n    });\n};\nexport const setProfession = (professionName) => {\n  return {\n    type: SET_PROFESSION,\n    payload: professionName,\n  };\n};\nexport const searchCourses = (professionName) => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/courses\", { params: { professionName } })\n    .then((res) => {\n      dispatch({\n        type: SET_COURSES,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_COURSES,\n        payload: [],\n      });\n    });\n};\n\nexport const addProfession = (professionName) => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .post(\"/profession\", { name: professionName })\n    .then((res) => {\n      dispatch(getProfessions());\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_COURSES,\n        payload: [],\n      });\n    });\n};\n\nexport const likeCourse = (courseId) => (dispatch) => {\n  axios\n    .get(`/course/${courseId}/like`)\n    .then((res) => {\n      dispatch({\n        type: LIKE_COURSE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n// Unlike a scream\nexport const unlikeCourse = (courseId) => (dispatch) => {\n  axios\n    .get(`/course/${courseId}/unlike`)\n    .then((res) => {\n      dispatch({\n        type: UNLIKE_COURSE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\nexport const addCourse = (courseName, professionName) => (dispatch) => {\n  axios\n    .post(`/profession/course`, { name: courseName, professionName })\n    .then((res) => {\n      dispatch(searchCourses(professionName));\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const searchComments = (courseName) => (dispatch) => {\n  dispatch({\n    type: SET_COURSE,\n    payload: courseName,\n  });\n\n  axios\n    .get(\"/courseToProfession\", { params: { courseName } })\n    .then((res) => {\n      dispatch({\n        type: SET_COMMENTS,\n        payload: res.data.allComments,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_COMMENTS,\n        payload: [],\n      });\n    });\n};\n\nexport const addComment = (body, courseName) => (dispatch) => {\n  axios\n    .post(\"/course/comment\", { courseName, body })\n    .then(() => {\n      dispatch(searchComments(courseName));\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const deleteComment = (commentId, courseName) => (dispatch) => {\n  axios\n    .delete(`/comment/${commentId}`)\n    .then(() => {\n      dispatch(searchComments(courseName));\n    })\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}