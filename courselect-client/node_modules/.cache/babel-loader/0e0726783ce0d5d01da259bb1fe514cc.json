{"ast":null,"code":"var _jsxFileName = \"/Users/mokhiraatashikova/Desktop/mohi/exponential program/coursesApp/courselect-client/src/pages/feedbacks.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Comment from \"../components/Comment\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { addComment } from \"../redux/actions/dataActions\";\nimport { Grid, Typography, TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  form: {\n    textAlign: \"center\"\n  },\n  image: {\n    margin: \"20px auto 20px auto\"\n  },\n  button: {\n    marginTop: 20,\n    marginRight: 30,\n    position: \"relative\"\n  },\n  pageTitle: {\n    margin: \"10px auto 10px auto\"\n  },\n  textField: {\n    margin: \"10px auto 10px auto\"\n  },\n  customError: {\n    color: \"red\",\n    fontSize: \"0.8rem\",\n    marginTop: 10\n  },\n  progress: {\n    position: \"absolute\"\n  }\n};\nexport class feedbacks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newComment: \"\",\n      adding: false\n    };\n\n    this.handleAdd = event => {\n      this.setState({\n        adding: true\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        newComment: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.newComment) {\n        this.props.addCourse(this.state.newCourse, this.props.data.professionName);\n        this.setState({\n          adding: false,\n          errors: \"\",\n          newComment: \"\"\n        });\n      } else {\n        this.setState({\n          errors: \"Empty comment\"\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      course,\n      comments\n    } = this.props;\n    let renderedComments;\n\n    if (comments.length !== 0) {\n      renderedComments = comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, comment.commentId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this));\n    } else {\n      renderedComments = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no feedbacks yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: course\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderedComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.button,\n        disabled: this.state.adding,\n        onClick: this.handleAdd,\n        children: \"ADD NEW FEEDBACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), this.state.adding && /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"entry\",\n          name: \"entry\",\n          type: \"text\",\n          label: \"Enter a new course...\",\n          className: classes.textField,\n          helperText: this.state.errors,\n          error: this.state.errors ? true : false,\n          value: this.state.newCourse,\n          onChange: this.handleChange,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.button,\n          disabled: !this.state.adding,\n          onClick: this.handleSubmit,\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          disabled: !this.state.adding,\n          onClick: this.handleCancel,\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  course: state.data.course,\n  comments: state.data.comments\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(courses));","map":{"version":3,"sources":["/Users/mokhiraatashikova/Desktop/mohi/exponential program/coursesApp/courselect-client/src/pages/feedbacks.js"],"names":["React","Component","connect","Comment","withStyles","addComment","Grid","Typography","TextField","Button","CircularProgress","styles","form","textAlign","image","margin","button","marginTop","marginRight","position","pageTitle","textField","customError","color","fontSize","progress","feedbacks","state","newComment","adding","handleAdd","event","setState","handleChange","target","value","handleSubmit","preventDefault","props","addCourse","newCourse","data","professionName","errors","render","classes","course","comments","renderedComments","length","map","comment","commentId","handleCancel","mapStateToProps","courses"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Comment from \"../components/Comment\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { addComment } from \"../redux/actions/dataActions\";\nimport {\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst styles = {\n  form: {\n    textAlign: \"center\",\n  },\n  image: {\n    margin: \"20px auto 20px auto\",\n  },\n  button: {\n    marginTop: 20,\n    marginRight: 30,\n    position: \"relative\",\n  },\n  pageTitle: {\n    margin: \"10px auto 10px auto\",\n  },\n  textField: {\n    margin: \"10px auto 10px auto\",\n  },\n  customError: {\n    color: \"red\",\n    fontSize: \"0.8rem\",\n    marginTop: 10,\n  },\n  progress: {\n    position: \"absolute\",\n  },\n};\nexport class feedbacks extends Component {\n  state = {\n    newComment: \"\",\n    adding: false,\n  };\n  handleAdd = (event) => {\n    this.setState({\n      adding: true,\n    });\n  };\n  handleChange = (event) => {\n    this.setState({\n      newComment: event.target.value,\n    });\n  };\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.newComment) {\n      this.props.addCourse(\n        this.state.newCourse,\n        this.props.data.professionName\n      );\n      this.setState({\n        adding: false,\n        errors: \"\",\n        newComment: \"\",\n      });\n    } else {\n      this.setState({\n        errors: \"Empty comment\",\n      });\n    }\n  };\n\n  render() {\n    const { classes, course, comments } = this.props;\n    let renderedComments;\n\n    if (comments.length !== 0) {\n      renderedComments = comments.map((comment) => (\n        <Comment key={comment.commentId} comment={comment} />\n      ));\n    } else {\n      renderedComments = <p>no feedbacks yet</p>;\n    }\n    return (\n      <div>\n        <div>\n          <h1>{course}</h1>\n        </div>\n        <div>{renderedComments}</div>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n          disabled={this.state.adding}\n          onClick={this.handleAdd}\n        >\n          ADD NEW FEEDBACK\n        </Button>\n\n        {this.state.adding && (\n          <form>\n            <TextField\n              id=\"entry\"\n              name=\"entry\"\n              type=\"text\"\n              label=\"Enter a new course...\"\n              className={classes.textField}\n              helperText={this.state.errors}\n              error={this.state.errors ? true : false}\n              value={this.state.newCourse}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              disabled={!this.state.adding}\n              onClick={this.handleSubmit}\n            >\n              ADD\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={!this.state.adding}\n              onClick={this.handleCancel}\n            >\n              CANCEL\n            </Button>\n          </form>\n        )}\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  course: state.data.course,\n  comments: state.data.comments,\n});\nexport default connect(mapStateToProps)(withStyles(styles)(courses));\n"]},"metadata":{},"sourceType":"module"}