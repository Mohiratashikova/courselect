{"ast":null,"code":"var _jsxFileName = \"/Users/mokhiraatashikova/Desktop/mohi/exponential program/coursesApp/courselect-client/src/components/Search.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProfessions, addProfession } from \"../redux/actions/dataActions\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Profession from \"./Profession\";\nimport { Grid, Typography, TextField, Button, CircularProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  form: {\n    textAlign: \"center\"\n  },\n  image: {\n    margin: \"20px auto 20px auto\"\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\"\n  },\n  pageTitle: {\n    margin: \"10px auto 10px auto\"\n  },\n  textField: {\n    margin: \"10px auto 10px auto\"\n  },\n  customError: {\n    color: \"red\",\n    fontSize: \"0.8rem\",\n    marginTop: 10\n  },\n  progress: {\n    position: \"absolute\"\n  }\n};\nexport class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      entry: \"\",\n      newProfession: \"\",\n      adding: false\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleAdd = event => {\n      this.setState({\n        adding: true\n      });\n    };\n\n    this.handleCreate = event => {\n      this.setState({\n        newProfession: event.target.value\n      });\n    };\n\n    this.handleNewSubmit = event => {\n      event.preventDefault();\n\n      if (!this.props.data.professions.some(profession => profession.professionName.toLowerCase() === this.state.newProfession.toLowerCase())) {\n        this.props.addProfession(this.state.newProfession);\n        this.setState({\n          adding: false,\n          errors: \"\"\n        });\n      } else {\n        this.setState({\n          errors: \"Profession already exists\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getProfessions();\n  }\n\n  render() {\n    const {\n      professions,\n      loading\n    } = this.props.data;\n    const {\n      classes\n    } = this.props;\n    let professionsMarkup = !loading ? professions.map(profession => profession.professionName.toLowerCase().includes(this.state.entry.toLowerCase()) && /*#__PURE__*/_jsxDEV(Profession, {\n      profession: profession\n    }, profession.professionId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 10,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 2,\n        xs: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 8,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"search\",\n            name: \"entry\",\n            type: \"text\",\n            label: \"Enter a profession...\",\n            className: classes.textField // helperText={errors.search}\n            // error={errors.search ? true : false}\n            ,\n            value: this.state.entry,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            disabled: loading,\n            children: [\"SEARCH\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 30,\n              className: classes.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.button,\n          disabled: this.state.adding,\n          onClick: this.handleAdd,\n          children: [\"ADD NEW PROFESSION\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), this.state.adding && /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"search\",\n            name: \"entry\",\n            type: \"text\",\n            label: \"Enter a new profession...\",\n            className: classes.textField,\n            helperText: this.state.errors,\n            error: this.state.errors ? true : false,\n            value: this.state.newProfession,\n            onChange: this.handleCreate,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            className: classes.button,\n            disabled: !this.state.adding,\n            onClick: this.handleNewSubmit,\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            disabled: !this.state.adding,\n            onClick: this.setState({\n              adding: false\n            }),\n            children: \"CANCEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: professionsMarkup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 2,\n        xs: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this); // return ;\n  }\n\n} // Search.propTypes = {\n//   getProfessions: PropTypes.func.isRequired,\n//   data: PropTypes.object.isRequired,\n// };\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getProfessions,\n  addProfession\n})(withStyles(styles)(Search));","map":{"version":3,"sources":["/Users/mokhiraatashikova/Desktop/mohi/exponential program/coursesApp/courselect-client/src/components/Search.js"],"names":["React","Component","connect","getProfessions","addProfession","withStyles","Profession","Grid","Typography","TextField","Button","CircularProgress","styles","form","textAlign","image","margin","button","marginTop","position","pageTitle","textField","customError","color","fontSize","progress","Search","state","entry","newProfession","adding","handleSubmit","event","preventDefault","handleChange","setState","target","name","value","handleAdd","handleCreate","handleNewSubmit","props","data","professions","some","profession","professionName","toLowerCase","errors","componentDidMount","render","loading","classes","professionsMarkup","map","includes","professionId","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProfessions, addProfession } from \"../redux/actions/dataActions\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Profession from \"./Profession\";\nimport {\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  CircularProgress,\n} from \"@material-ui/core\";\n\nconst styles = {\n  form: {\n    textAlign: \"center\",\n  },\n  image: {\n    margin: \"20px auto 20px auto\",\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\",\n  },\n  pageTitle: {\n    margin: \"10px auto 10px auto\",\n  },\n  textField: {\n    margin: \"10px auto 10px auto\",\n  },\n  customError: {\n    color: \"red\",\n    fontSize: \"0.8rem\",\n    marginTop: 10,\n  },\n  progress: {\n    position: \"absolute\",\n  },\n};\nexport class Search extends Component {\n  state = {\n    entry: \"\",\n    newProfession: \"\",\n    adding: false,\n  };\n  componentDidMount() {\n    this.props.getProfessions();\n  }\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleAdd = (event) => {\n    this.setState({\n      adding: true,\n    });\n  };\n  handleCreate = (event) => {\n    this.setState({\n      newProfession: event.target.value,\n    });\n  };\n  handleNewSubmit = (event) => {\n    event.preventDefault();\n    if (\n      !this.props.data.professions.some(\n        (profession) =>\n          profession.professionName.toLowerCase() ===\n          this.state.newProfession.toLowerCase()\n      )\n    ) {\n      this.props.addProfession(this.state.newProfession);\n      this.setState({\n        adding: false,\n\n        errors: \"\",\n      });\n    } else {\n      this.setState({\n        errors: \"Profession already exists\",\n      });\n    }\n  };\n  render() {\n    const { professions, loading } = this.props.data;\n    const { classes } = this.props;\n    let professionsMarkup = !loading ? (\n      professions.map(\n        (profession) =>\n          profession.professionName\n            .toLowerCase()\n            .includes(this.state.entry.toLowerCase()) && (\n            <Profession key={profession.professionId} profession={profession} />\n          )\n      )\n    ) : (\n      <p>Loading</p>\n    );\n\n    return (\n      <Grid container spacing={10}>\n        <Grid item sm={2} xs={12} />\n        <Grid item sm={8} xs={12}>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"search\"\n              name=\"entry\"\n              type=\"text\"\n              label=\"Enter a profession...\"\n              className={classes.textField}\n              // helperText={errors.search}\n              // error={errors.search ? true : false}\n              value={this.state.entry}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            {/* {errors.general && (\n              <Typography variant=\"body2\" className={classes.customError}>\n                {errors.general}\n              </Typography>\n            )} */}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={loading}\n            >\n              SEARCH\n              {loading && (\n                <CircularProgress size={30} className={classes.progress} />\n              )}\n            </Button>\n          </form>\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            disabled={this.state.adding}\n            onClick={this.handleAdd}\n          >\n            ADD NEW PROFESSION\n            <br />\n          </Button>\n          <br />\n          {this.state.adding && (\n            <form>\n              <TextField\n                id=\"search\"\n                name=\"entry\"\n                type=\"text\"\n                label=\"Enter a new profession...\"\n                className={classes.textField}\n                helperText={this.state.errors}\n                error={this.state.errors ? true : false}\n                value={this.state.newProfession}\n                onChange={this.handleCreate}\n                fullWidth\n              />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                disabled={!this.state.adding}\n                onClick={this.handleNewSubmit}\n              >\n                ADD\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                disabled={!this.state.adding}\n                onClick={this.setState({ adding: false })}\n              >\n                CANCEL\n              </Button>\n            </form>\n          )}\n\n          <br />\n          <div>{professionsMarkup}</div>\n        </Grid>\n        <Grid item sm={2} xs={12} />\n      </Grid>\n    );\n    // return ;\n  }\n}\n\n// Search.propTypes = {\n//   getProfessions: PropTypes.func.isRequired,\n//   data: PropTypes.object.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nexport default connect(mapStateToProps, { getProfessions, addProfession })(\n  withStyles(styles)(Search)\n);\n"]},"metadata":{},"sourceType":"module"}