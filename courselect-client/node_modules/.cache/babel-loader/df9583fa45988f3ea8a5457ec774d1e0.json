{"ast":null,"code":"import { SET_PROFESSIONS, SET_PROFESSION, ADD_PROFESSION, SET_COURSES, SET_COMMENTS, LOADING_DATA, LIKE_COURSE, UNLIKE_COURSE, DELETE_COMMENT, SET_ERRORS, POST_COMMENT, CLEAR_ERRORS, LOADING_UI, SET_COURSE, STOP_LOADING_UI, SUBMIT_COMMENT } from \"../types\";\nimport axios from \"axios\"; // Get all screams\n\nexport const getProfessions = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(\"/professions\").then(res => {\n    dispatch({\n      type: SET_PROFESSIONS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_PROFESSIONS,\n      payload: []\n    });\n  });\n};\nexport const searchCourses = professionName => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(\"/courses\", {\n    params: {\n      professionName\n    }\n  }).then(res => {\n    console.log(professionName);\n    dispatch({\n      type: SET_COURSES,\n      payload: res.data\n    });\n    dispatch({\n      type: SET_PROFESSION,\n      payload: professionName\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_COURSES,\n      payload: []\n    });\n  });\n};\nexport const addProfession = professionName => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.post(\"/profession\", {\n    name: professionName\n  }).then(res => {\n    console.log(professionName);\n    dispatch(getProfessions());\n  }).catch(err => {\n    dispatch({\n      type: SET_COURSES,\n      payload: []\n    });\n  });\n};\nexport const likeCourse = courseId => dispatch => {\n  axios.get(`/course/${courseId}/like`).then(res => {\n    dispatch({\n      type: LIKE_COURSE,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Unlike a scream\n\nexport const unlikeCourse = courseId => dispatch => {\n  axios.get(`/course/${courseId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_COURSE,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addCourse = (courseName, professionName) => dispatch => {\n  axios.post(`/profession/course`, {\n    name: courseName,\n    professionName\n  }).then(res => {\n    dispatch(searchCourses(professionName));\n  }).catch(err => console.log(err));\n};\nexport const searchComments = courseName => dispatch => {\n  dispatch({\n    type: SET_COURSE,\n    payload: courseName\n  });\n  axios.get(\"/courseToProfession\", {\n    courseName\n  }).then(res => {\n    console.log(res.data.allComments);\n    dispatch({\n      type: SET_COMMENTS,\n      payload: res.data.allComments\n    });\n  }).catch(err => {\n    console.log(\"this error\", err);\n    dispatch({\n      type: SET_COMMENTS,\n      payload: []\n    });\n  });\n};\nexport const addComment = (body, courseName) => dispatch => {\n  console.log(body, courseName);\n  axios.post(`/course/comment`, {\n    name: courseName,\n    body\n  }).then(() => {\n    dispatch(searchComments(courseName));\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/mokhiraatashikova/Desktop/mohi/exponential program/coursesApp/courselect-client/src/redux/actions/dataActions.js"],"names":["SET_PROFESSIONS","SET_PROFESSION","ADD_PROFESSION","SET_COURSES","SET_COMMENTS","LOADING_DATA","LIKE_COURSE","UNLIKE_COURSE","DELETE_COMMENT","SET_ERRORS","POST_COMMENT","CLEAR_ERRORS","LOADING_UI","SET_COURSE","STOP_LOADING_UI","SUBMIT_COMMENT","axios","getProfessions","dispatch","type","get","then","res","payload","data","catch","err","searchCourses","professionName","params","console","log","addProfession","post","name","likeCourse","courseId","unlikeCourse","addCourse","courseName","searchComments","allComments","addComment","body"],"mappings":"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","sourcesContent":["import {\n  SET_PROFESSIONS,\n  SET_PROFESSION,\n  ADD_PROFESSION,\n  SET_COURSES,\n  SET_COMMENTS,\n  LOADING_DATA,\n  LIKE_COURSE,\n  UNLIKE_COURSE,\n  DELETE_COMMENT,\n  SET_ERRORS,\n  POST_COMMENT,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  SET_COURSE,\n  STOP_LOADING_UI,\n  SUBMIT_COMMENT,\n} from \"../types\";\nimport axios from \"axios\";\n\n// Get all screams\nexport const getProfessions = () => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/professions\")\n    .then((res) => {\n      dispatch({\n        type: SET_PROFESSIONS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_PROFESSIONS,\n        payload: [],\n      });\n    });\n};\n\nexport const searchCourses = (professionName) => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/courses\", { params: { professionName } })\n    .then((res) => {\n      console.log(professionName);\n      dispatch({\n        type: SET_COURSES,\n        payload: res.data,\n      });\n      dispatch({\n        type: SET_PROFESSION,\n        payload: professionName,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_COURSES,\n        payload: [],\n      });\n    });\n};\n\nexport const addProfession = (professionName) => (dispatch) => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .post(\"/profession\", { name: professionName })\n    .then((res) => {\n      console.log(professionName);\n      dispatch(getProfessions());\n    })\n    .catch((err) => {\n      dispatch({\n        type: SET_COURSES,\n        payload: [],\n      });\n    });\n};\n\nexport const likeCourse = (courseId) => (dispatch) => {\n  axios\n    .get(`/course/${courseId}/like`)\n    .then((res) => {\n      dispatch({\n        type: LIKE_COURSE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n// Unlike a scream\nexport const unlikeCourse = (courseId) => (dispatch) => {\n  axios\n    .get(`/course/${courseId}/unlike`)\n    .then((res) => {\n      dispatch({\n        type: UNLIKE_COURSE,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\nexport const addCourse = (courseName, professionName) => (dispatch) => {\n  axios\n    .post(`/profession/course`, { name: courseName, professionName })\n    .then((res) => {\n      dispatch(searchCourses(professionName));\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const searchComments = (courseName) => (dispatch) => {\n  dispatch({\n    type: SET_COURSE,\n    payload: courseName,\n  });\n  axios\n    .get(\"/courseToProfession\", { courseName })\n    .then((res) => {\n      console.log(res.data.allComments);\n\n      dispatch({\n        type: SET_COMMENTS,\n        payload: res.data.allComments,\n      });\n    })\n    .catch((err) => {\n      console.log(\"this error\", err);\n      dispatch({\n        type: SET_COMMENTS,\n        payload: [],\n      });\n    });\n};\n\nexport const addComment = (body, courseName) => (dispatch) => {\n  console.log(body, courseName);\n  axios\n    .post(`/course/comment`, { name: courseName, body })\n    .then(() => {\n      dispatch(searchComments(courseName));\n    })\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}