{"ast":null,"code":"var _jsxFileName = \"/Users/mokhiraatashikova/Desktop/mohi/exponential program/coursesApp/courselect-client/src/pages/login.js\";\nimport React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport AppIcon from \"../images/icon.png\";\nimport { Link } from \"react-router-dom\"; // MUI Stuff\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; // Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\"; // const styles = (theme) => ({\n//   ...theme,\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  } // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.UI.errors) {\n  //     this.setState({ errors: nextProps.UI.errors });\n  //   }\n  // }\n  // handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   const userData = {\n  //     email: this.state.email,\n  //     password: this.state.password,\n  //   };\n  //   this.props.loginUser(userData, this.props.history);\n  // };\n  // handleChange = (event) => {\n  //   this.setState({\n  //     [event.target.name]: event.target.value,\n  //   });\n  // };\n\n\n  render() {\n    // const {\n    //   classes,\n    //   UI: { loading },\n    // } = this.props;\n    // const { errors } = this.state;\n    // const { classes } = this.props;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: AppIcon,\n          alt: \"monkey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            name: \"email\",\n            type: \"email\",\n            label: \"Email\" // className={classes.textField}\n            // helperText={errors.email}\n            // error={errors.email ? true : false}\n            // value={this.state.email}\n            // onChange={this.handleChange}\n            ,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            label: \"Password\" // className={classes.textField}\n            // helperText={errors.password}\n            // error={errors.password ? true : false}\n            // value={this.state.password}\n            // onChange={this.handleChange}\n            ,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\" // className={classes.button}\n            // disabled={loading}\n            ,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"dont have an account ? sign up \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n} // login.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   loginUser: PropTypes.func.isRequired,\n//   user: PropTypes.object.isRequired,\n//   UI: PropTypes.object.isRequired,\n// };\n// const mapStateToProps = (state) => ({\n//   user: state.user,\n//   UI: state.UI,\n// });\n// const mapActionsToProps = {\n//   loginUser,\n// };\n// export default connect(\n//   mapStateToProps,\n//   mapActionsToProps\n// )(withStyles(styles)(login));\n\n\nexport default login;","map":{"version":3,"sources":["/Users/mokhiraatashikova/Desktop/mohi/exponential program/coursesApp/courselect-client/src/pages/login.js"],"names":["React","Component","withStyles","PropTypes","AppIcon","Link","Grid","Typography","TextField","Button","CircularProgress","connect","loginUser","login","constructor","state","email","password","errors","render","classes","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B,C,CAEA;AACA;AACA;;;;AAEA,MAAMC,KAAN,SAAoBZ,SAApB,CAA8B;AAC5Ba,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD,GAR2B,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AAEA,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEC,OAAO,CAACC,IAAnC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,MAAb;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEjB,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAM,UAAA,UAAU,MAAhB;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,OADL;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,KAAK,EAAC,OAJR,CAKE;AACA;AACA;AACA;AACA;AATF;AAUE,YAAA,SAAS;AAVX;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,SAAD;AACE,YAAA,EAAE,EAAC,UADL;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,KAAK,EAAC,UAJR,CAKE;AACA;AACA;AACA;AACA;AATF;AAUE,YAAA,SAAS;AAVX;AAAA;AAAA;AAAA;AAAA,kBAbF,eA8BE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAC,WAFV;AAGE,YAAA,KAAK,EAAC,SAHR,CAIE;AACA;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9BF,eA0CE;AAAA;AAAA;AAAA;AAAA,kBA1CF,eA2CE;AAAA,uEACiC,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAqDE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,cArDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyDD;;AA5F2B,C,CA+F9B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeS,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport AppIcon from \"../images/icon.png\";\nimport { Link } from \"react-router-dom\";\n\n// MUI Stuff\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// Redux stuff\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\";\n\n// const styles = (theme) => ({\n//   ...theme,\n// });\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.UI.errors) {\n  //     this.setState({ errors: nextProps.UI.errors });\n  //   }\n  // }\n  // handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   const userData = {\n  //     email: this.state.email,\n  //     password: this.state.password,\n  //   };\n  //   this.props.loginUser(userData, this.props.history);\n  // };\n  // handleChange = (event) => {\n  //   this.setState({\n  //     [event.target.name]: event.target.value,\n  //   });\n  // };\n  render() {\n    // const {\n    //   classes,\n    //   UI: { loading },\n    // } = this.props;\n    // const { errors } = this.state;\n    // const { classes } = this.props;\n\n    return (\n      <Grid container className={classes.form}>\n        <Grid item sm />\n        <Grid item sm>\n          <img src={AppIcon} alt=\"monkey\" />\n          <Typography variant=\"h2\">Login</Typography>\n          <form noValidate>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              // className={classes.textField}\n              // helperText={errors.email}\n              // error={errors.email ? true : false}\n              // value={this.state.email}\n              // onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              // className={classes.textField}\n              // helperText={errors.password}\n              // error={errors.password ? true : false}\n              // value={this.state.password}\n              // onChange={this.handleChange}\n              fullWidth\n            />\n            {/* {errors.general && (\n              <Typography variant=\"body2\" className={classes.customError}>\n                {errors.general}\n              </Typography>\n            )} */}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.button}\n              // disabled={loading}\n            >\n              Login\n              {/* {loading && (\n                <CircularProgress size={30} className={classes.progress} />\n              )} */}\n            </Button>\n            <br />\n            <small>\n              dont have an account ? sign up <Link to=\"/signup\">here</Link>\n            </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    );\n  }\n}\n\n// login.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   loginUser: PropTypes.func.isRequired,\n//   user: PropTypes.object.isRequired,\n//   UI: PropTypes.object.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({\n//   user: state.user,\n//   UI: state.UI,\n// });\n\n// const mapActionsToProps = {\n//   loginUser,\n// };\n\n// export default connect(\n//   mapStateToProps,\n//   mapActionsToProps\n// )(withStyles(styles)(login));\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}